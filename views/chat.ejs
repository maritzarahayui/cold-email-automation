<!DOCTYPE html>
<html>
  <head>
    <title>Email</title>
    <link
      rel="stylesheet"
      href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css"
    />
    <link
      rel="stylesheet"
      href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css"
    />
    <style>
      body {
        padding-top: 0;
        background-color: #030712;
        color: white;
        font-family: Raleway, sans-serif;
        height: 100vh;
        display: flex;
        justify-content: center;
        align-items: center;
      }

      .jumbotron {
        background: rgba(255, 255, 255, 0.2);
        border-radius: 16px;
        box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);
        backdrop-filter: blur(5px);
        -webkit-backdrop-filter: blur(5px);
        width: 50%;
        text-align: center;
        padding: 40px 20px;
      }

      .well {
        background: rgba(255, 255, 255, 0.1);
        border-radius: 16px;
        padding: 20px;
        box-shadow: 0 2px 15px rgba(0, 0, 0, 0.1);
        text-align: left;
      }

      .text-primary {
        color: #ff6431 !important;
      }

      h1 {
        padding-bottom: 20px;
        font-weight: bold;
      }

      input[type="text"],
      button {
        margin-top: 20px;
        margin-bottom: 20px;
      }

      .btn-primary {
        width: 100%;
        background-color: #ff6431;
        border: none;
      }

      .btn-primary:hover,
      .btn-primary:active {
        width: 100%;
        background-color: #f9835c;
        border: none;
      }

      .output-area {
        margin-top: 20px;
        background: rgba(0, 0, 0, 0.5);
        color: white;
        padding: 15px;
        border-radius: 10px;
        max-height: 300px;
        overflow-y: auto;
        word-wrap: break-word;
        white-space: pre-wrap; /* Ensure new lines are preserved */
      }

      textarea {
        width: 100%;
        height: 300px;
        margin-top: 20px;
        padding: 15px;
        border-radius: 10px;
        background: rgba(0, 0, 0, 0.5);
        color: white;
        border: none;
        font-family: inherit;
        resize: none;
      }
    </style>
  </head>

  <body>
    <div class="jumbotron">
      <h1 class="text-primary">Generating EMAILs Draft</h1>
      <form id="promptForm">
        <input
          type="text"
          class="form-control"
          id="promptInput"
          placeholder="Enter the email's topic"
          required
        />
        <button type="submit" class="btn btn-primary">Generate</button>
      </form>
      <textarea
        id="outputArea"
        placeholder="Your generated email will appear here..."
        disabled
      ></textarea>

      <form id="sendMailForm">
        <input
          type="email"
          class="form-control"
          id="emailTo"
          placeholder="Enter recipient's email"
          required
        />
        <button type="submit" class="btn btn-primary">Send Email</button>
      </form>
    </div>

    <script>
      var form = document.getElementById("promptForm");

      form.addEventListener("submit", async (event) => {
        event.preventDefault();

        var prompt = document.getElementById("promptInput").value;
        var outputArea = document.getElementById("outputArea");

        outputArea.value = "Generating email...";
        outputArea.disabled = true; // Disable textarea during generation

        const response = await fetch("http://localhost:3000/chat", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({ prompt: prompt }),
        });

        const decoder = new TextDecoder();
        const reader = response.body.getReader();
        let chunks = "";

        while (true) {
          const { done, value } = await reader.read();
          if (done) break;
          chunks += decoder.decode(value);
          outputArea.value = chunks;
        }
        outputArea.disabled = false; // Enable textarea after generation
      });

      sendMailForm.addEventListener("submit", async (event) => {
          event.preventDefault();

          const to = document.getElementById("emailTo").value;
          let text = document.getElementById("outputArea").value;
          
          // ambil SUbject dari line pertama --> Subject:
          let subjectLineEndIndex = text.indexOf("\n");
          let subjectLine = text.substring(0, subjectLineEndIndex).trim();
          let subject = subjectLine.startsWith("Subject:") ? subjectLine.substring(8).trim() : "No Subject";
          
          text = text.substring(subjectLineEndIndex + 1).trim(); // ga pake Subject;

          const htmlContent = `
            ${text.split('\n').map((line, index, array) => {
              if (index === 0 || index === array.length - 1) {
                return `<strong>${line}</strong>`;
              }
              return line;
            }).join('<br>')}
            <br><br>
            <a href="https://algo-network.vercel.app/" style="display: inline-block; padding: 10px; background-color: #ff6431; color: black; text-decoration: none; margin-top: 20px;">Pay us a visit!</a>
          `;

          const mailResponse = await fetch("http://localhost:3000/text-mail", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({ to: to, subject: subject, text: text, html: htmlContent }),
          });

          if (mailResponse.ok) {
            alert("Email sent successfully!");
          } else {
            alert("Failed to send email.");
          }
        });



    </script>
  </body>
</html>
