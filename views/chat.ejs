<!DOCTYPE html>
<html>

<head>
  <title>Email</title>
  
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css" />
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" />
  <link href="https://fonts.googleapis.com/css2?family=Raleway:wght@400;700&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
  
  <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>

  <style>
    .raleway {
      font-family: 'Raleway', sans-serif;
    }

    body {
      padding-top: 0;
      background-color: #030712;
      color: white;
      font-family: Raleway, sans-serif;
      height: 100vh;
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
    }

    .jumbotron {
      background: rgba(255, 255, 255, 0.2);
      border-radius: 16px;
      box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);
      backdrop-filter: blur(5px);
      -webkit-backdrop-filter: blur(5px);
      flex-grow: 1;
      text-align: center;
      padding: 40px 20px;
    }

    .text-primary {
      color: #ff6431 !important;
    }

    h1 {
      font-weight: bold;
      margin-bottom: 40px;
    }

    .long-btn {
      width: 100%;
      background-color: #ff6431;
      color: white;
      border: none;
      margin-top: 20px;
    }

    .long-btn:hover{
      background-color: #172554;
      color: white;
      border: none;
    }

    .btn-primary {
      margin-left: 10px;
      background-color: #ff6431;
      border: none;
    }

    .btn-primary:hover,
    .btn-primary:active {
      background-color: #172554;
      color: white;
      border: none;
    }

    textarea {
      width: 100%;
      padding: 15px;
      border-radius: 10px;
      background: rgba(0, 0, 0, 0.5);
      color: white;
      border: none;
      font-family: inherit;
      resize: none;
      height: 200px;
      margin-top: 20px;
      margin-bottom: 20px;
    }

    .output-area {
      margin-top: 20px;
      background: rgba(0, 0, 0, 0.5);
      color: white;
      padding: 15px;
      border-radius: 10px;
      max-height: 300px;
      overflow-y: auto;
      word-wrap: break-word;
      white-space: pre-wrap;
    }
  </style>
</head>

<body>
  <h1 class="text-primary">Generating EMAILs Draft</h1>

  <div class="container d-flex justify-content-between">
    <div class="jumbotron mr-2">
      <form id="promptForm">
        <div class="d-flex">
          <input type="text" class="form-control" id="promptInput" placeholder="Enter the email's topic" required />
          <button type="submit" class="btn btn-primary">Generate</button>
        </div>
      </form>

      <textarea id="outputArea" placeholder="Your generated email will appear here..." disabled></textarea>

      <form id="sendMailForm">
        <div class="d-flex" style="gap: 10px;">
          <input type="file" class="form-control" id="emailFile" accept=".csv" />
          <input type="text" class="form-control" id="emailTo" placeholder="Enter email addresses separated by commas" />
          <input type="datetime-local" class="form-control" id="scheduleTime" placeholder="Select date and time" required />
        </div>
        <button type="submit" class="btn long-btn">Send Email</button>
      </form>
    </div>
  </div> 

  <script>
    var form = document.getElementById("promptForm");

    form.addEventListener("submit", async (event) => {
      event.preventDefault();

      var prompt = document.getElementById("promptInput").value;
      var outputArea = document.getElementById("outputArea");

      outputArea.value = "Generating email...";
      outputArea.disabled = true; // Disable textarea during generation

      const response = await fetch("http://localhost:3000/chat", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ prompt: prompt }),
      });

      const decoder = new TextDecoder();
      const reader = response.body.getReader();
      let chunks = "";

      while (true) {
        const { done, value } = await reader.read();
        if (done) break;
        chunks += decoder.decode(value);
        outputArea.value = chunks;
      }
      outputArea.disabled = false; // Enable textarea after generation
    });

    const toggleEmailToRequired = () => {
      if (emailFileInput.files.length > 0) {
        emailToInput.removeAttribute("required");
      } else {
        emailToInput.setAttribute("required", "required");
      }
    };

    const emailToInput = document.getElementById("emailTo");
    const emailFileInput = document.getElementById("emailFile");

    emailFileInput.addEventListener("change", toggleEmailToRequired);
    toggleEmailToRequired();

    sendMailForm.addEventListener("submit", async (event) => {
      event.preventDefault();
      const emailToInput = document.getElementById("emailTo").value;
      const emailFileInput = document.getElementById("emailFile").files[0];
      const scheduleTimeInput = document.getElementById("scheduleTime").value;
      let text = document.getElementById("outputArea").value;
      let subjectLineEndIndex = text.indexOf("\n");
      let subjectLine = text.substring(0, subjectLineEndIndex).trim();
      let subject = subjectLine.startsWith("Subject:") ? subjectLine.substring(8).trim() : "No Subject";      
      text = text.substring(subjectLineEndIndex + 1).trim();

      const htmlContent = `
        <div style="width: 100%; margin: 0 auto; text-align: left; font-family: Raleway; font-size: 16px;">
          <div style="text-align: center; margin-bottom: 20px">
            <img src="https://algo-network.vercel.app/logos/logo.png" alt="" style="max-width: 100%; max-height: 100px;">
          </div>
          <div style="width:95%; margin:auto;">
          ${text.split('\n').map((line, index, array) => {
            if (index === 0) {
              return `<strong style="color: #172554; font-size: 24px;">${line}</strong>`;
            } else if (index === array.length - 1) {
              return `<a href="https://algo-network.vercel.app/" style="color: #172554;">${line}</a>`;
            }
            return `<span>${line}</span>`;
          }).join('<br>')}
          </div>
        </div>
        
        <footer style="width:auto;margin:25px auto;font-family:Raleway;background:#172554;padding: 30px 40px;text-align:center;border-radius: 5px;">
          <table width="100%" cellspacing="0" cellpadding="0" border="0" style="max-width:1000px;margin:0 auto">
            <tbody><tr>
              <td style="text-align:left">
                <a href="https://algo-network.vercel.app/#" style="display:inline-block;margin:0 10px">
                  <img src="https://img.icons8.com/?size=100&amp;id=3685&amp;format=png&amp;color=FFFFFF" alt="Website" style="width:30px;vertical-align:middle">
                </a>
                <a href="https://www.linkedin.com/company/algo-network/" style="display:inline-block;margin:0 10px">
                  <img src="https://img.icons8.com/?size=100&amp;id=447&amp;format=png&amp;color=FFFFFF" alt="LinkedIn" style="width:30px;vertical-align:middle">
                </a>
                <a href="https://www.instagram.com/algonetwork" style="display:inline-block;margin:0 10px">
                  <img src="https://img.icons8.com/?size=100&amp;id=32292&amp;format=png&amp;color=FFFFFF" alt="Instagram" style="width:30px;vertical-align:middle">
                </a>
              </td>
              <td style="text-align:right">
                <p style="color:#fff;font-size:1rem;font-weight:300;margin:0">Â©2024 Algo Network | All Rights Reserved</p>
              </td>
            </tr>
          </tbody></table>
        </footer>
      `;

      let recipients = [];
      if (emailFileInput) {
        const fileContent = await emailFileInput.text();
        recipients = fileContent.split("\n").map(line => line.trim()).filter(line => line.length > 0);
      } else {
        recipients = emailToInput.split(",").map(email => email.trim());
      }

      const mailResponse = await fetch("http://localhost:3000/text-mail", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ to: recipients, subject: subject, text: text, html: htmlContent, scheduleTime: scheduleTimeInput }),
      });

      if (mailResponse.ok) {
        alert("Email scheduled successfully!");
      } else {
        alert("Failed to schedule email.");
      }
    });

  </script>
</body>

</html>
